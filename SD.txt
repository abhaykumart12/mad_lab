Java:
package com.example.atry;

import android.os.Bundle;
import android.os.Environment;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;

public class MainActivity extends AppCompatActivity {
    Button read,write;
    EditText ReadBox;
    EditText WriteBox;
    String fileName,filePath,fileContents;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        read =findViewById(R.id.Read);
        write = findViewById(R.id.Write);
        ReadBox = findViewById(R.id.ReadBox);
        WriteBox = findViewById(R.id.WriteBox);
        fileName ="myFile.txt";
        filePath = "FileDir";
        if(!isExternalStorageAvailableRW()){
            write.setEnabled(false);
        }
        write.setOnClickListener(view -> {
            ReadBox.setText("");
            fileContents = WriteBox.getText().toString().trim();
            if(!fileContents.equals("")) {
                //Get external files dir
                File myExtFile = new File(getExternalFilesDir(filePath), fileName);
                try {
                    FileOutputStream fos = new FileOutputStream(myExtFile);
                    fos.write(fileContents.getBytes());
                }
                catch (FileNotFoundException e){
                    e.printStackTrace();
                }
                catch (IOException e){
                    e.printStackTrace();
                }
                WriteBox.setText("");
                Toast.makeText(MainActivity.this, "TextFile written on SD Card",Toast.LENGTH_SHORT).show();
            }
            else{
                Toast.makeText(MainActivity.this, "Input Field Empty",
                        Toast.LENGTH_SHORT).show();
            }
        });

        read.setOnClickListener(view -> {
            FileReader fr;
            File myExtFile = new File(getExternalFilesDir(filePath),fileName);
            StringBuilder sb = new StringBuilder();
            String contents = "";
            try{
                fr = new FileReader(myExtFile);
                BufferedReader br = new BufferedReader(fr);
                String line = br.readLine();
                while(line!=null){
                    contents += line;
                    line = br.readLine();
                }
                ReadBox.setText(contents);
            }
            catch (FileNotFoundException e){
                e.printStackTrace();
            }
            catch (IOException e){
                e.printStackTrace();
            }
        });
    }

    private boolean isExternalStorageAvailableRW() {
        String ExternalStorageState = Environment.getExternalStorageState();
        if(ExternalStorageState.equals(Environment.MEDIA_MOUNTED)){
            return true;
        }
        return false;
    }
}

xml:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/Read"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Read"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.148"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.531" />

    <Button
        android:id="@+id/Write"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Write"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.643"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.531" />

    <EditText
        android:id="@+id/ReadBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="textPersonName"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.383"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.174" />

    <EditText
        android:id="@+id/WriteBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="textPersonName"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.383"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.31" />
</androidx.constraintlayout.widget.ConstraintLayout>

manifest:
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
